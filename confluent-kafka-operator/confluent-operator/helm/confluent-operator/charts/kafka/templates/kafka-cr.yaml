{{- $_ := required "Namespace is required" .Release.Namespace }}
{{- $_ := required "Name of kafka is required." $.Values.name }}
{{- $_ := required "Kafka replica count is required" $.Values.replicas }}
{{- $_ := required "Docker Repository FQDN path is required" .Values.global.provider.registry.fqdn }}
{{- if and .Values.global.provider.storage .Values.global.storageClassName }}
{{- fail "Only one between global.provider.storage and global.storageClassName can be set." }}
{{- end }}
{{- $storageClassName := .Values.storageClassName | default .Values.global.storageClassName }}


apiVersion: cluster.confluent.com/v1alpha1
kind: KafkaCluster
metadata:
  {{- include "confluent-operator.labels" . }}
  {{- include "confluent-operator.component-name" . }}
  {{- include "confluent-operator.namespace" . }}
spec:
  replicas: {{ .Values.replicas | int }}
  image: {{ .Values.global.provider.registry.fqdn }}/{{ .Values.image.repository -}}:{{- .Values.image.tag }}
  {{- include "confluent-operator.cr-init-container" . | indent 2 }}  
  terminationGracePeriodInSecond: {{ .Values.terminationGracePeriodSeconds | default 2147483647 }}
  options:
    enterprise: true
    {{- if .Values.options.acl.enabled }}
    acl: true
    {{- if and .Values.tls.enabled (ne .Values.tls.authentication.type "plain") }}
    supers: {{ printf "User:ANONYMOUS;%s" (default "" .Values.options.acl.supers)  }}
    {{- else }}
    supers: {{ printf "User:%s;%s" .Values.global.sasl.plain.username (default "" .Values.options.acl.supers) }}
    {{- end }}
    {{- end }}
  jvmConfig:
    heapSize: {{ .Values.jvmConfig.heapSize }}
  {{- if .Values.global.pod }}
  {{- include "confluent-operator.cr-pod-security-config" . | indent 2 }}
  {{- end }}
  {{- if .Values.global.provider.kubernetes.clusterDomain }}
  internalKubDomain: {{ .Values.global.provider.kubernetes.clusterDomain }}
  {{- end }}
  {{- include "confluent-operator.cr-annotations" .  | indent 2 }}
  resources:
{{- include "confluent-operator.resource-requirements" . | indent 4 }}
    storage:
    {{- range $key, $value := .Values.volume }}
    - name: {{ $key }}
      capacity: {{ $value }}
      {{- if $storageClassName }}
      storageClassName: {{ $storageClassName }}
      {{- end }}
    {{- end }}
  {{- if or (or .Values.nodeAffinity .Values.rack) .Values.disableHostPort }}  
  placement:
    {{- if .Values.disableHostPort }}
    disableHostPort: true
    {{- end }}
    {{- if .Values.nodeAffinity }}
    nodeAffinity:
      key: {{ .Values.nodeAffinity.key }}
      values:
{{ toYaml .Values.nodeAffinity.values | trim | indent 6 }}
    {{- end }}
    {{- if .Values.rack }}
    rack:
      topology: {{ .Values.rack.topology }}
    {{- end }}
  {{- end }}
  {{- if .Values.metricReporter.enabled }}
  {{- include "kafka.confluent-metric-reporter" .  | indent 2 }}
  {{- end }}
  {{- include "confluent-operator.cr-config-overrides" . | indent 2 }}
  {{- if .Values.zookeeper }}
  zookeeper:
    endpoint: {{ .Values.zookeeper.endpoint }}
  {{- end }}
  {{- if .Values.loadBalancer.enabled }}
  {{- $_ := required "Configure domain name (DNS) to access Kafka outside kubernetes cluster" .Values.loadBalancer.domain }}
  network:
    domain: {{ .Values.loadBalancer.domain }}
    type: {{ .Values.loadBalancer.type }}
    {{- if .Values.loadBalancer.annotations }}
    annotations: 
{{ toYaml .Values.loadBalancer.annotations | trim | indent 6 }}
    {{- end }}
    {{- if .Values.loadBalancer.bootstrapPrefix }}
    bootstrapPrefix: {{ .Values.loadBalancer.bootstrapPrefix }}
    {{- end }}
    {{- if .Values.loadBalancer.brokerPrefix }}
    brokerPrefix: {{ .Values.loadBalancer.brokerPrefix }}
    {{- end }}
  {{- end }}
  {{- if .Values.tls.enabled  }}
  tls:
    enabled: {{ .Values.tls.enabled }}
    {{- if and .Values.tls.authentication (not (empty .Values.tls.authentication.type)) }}
    authentication:
      type: {{ .Values.tls.authentication.type }}
    {{- end }}
    {{- if .Values.tls.authentication.principalMappingRules }}
    principalMappingRules:
{{ toYaml .Values.tls.authentication.principalMappingRules | trim | indent 4 }}
    {{- end }}
    jmxTLS: {{ .Values.tls.jmxTLS }}
    {{- if and (and .Values.tls.jmxAuthentication .Values.tls.jmxTLS) (not (empty .Values.tls.jmxAuthentication.type)) }}
    jmxAuthentication:
      type: {{ .Values.tls.jmxAuthentication.type }}
    {{- end }}
  {{- end }}
  {{- if .Values.global.authorization.rbac.enabled }}
  authorization:
   type: rbac
   {{- if .Values.global.authorization.superUsers }}
   superUsers:
{{ toYaml .Values.global.authorization.superUsers | trim | indent 4 }}
   {{- end }}
   rbac:
    mds:
      https: {{ .Values.services.mds.https }}
  {{- include "kafka.rbac_ldap" . | indent 4 }}
  {{- end }}
  {{- if and (not .Values.global.authorization.rbac.enabled) .Values.global.authorization.simple.enabled }}
  authorization:
    type: simple
    {{- if and .Values.tls.enabled (ne .Values.tls.authentication.type "plain") }}
    superUsers:
    - User:ANONYMOUS
{{ toYaml .Values.global.authorization.superUsers | trim | indent 4 }}
    {{- else }}
    superUsers:
    - {{ printf "User:%s" .Values.global.sasl.plain.username }}
{{ toYaml .Values.global.authorization.superUsers | trim | indent 4 }}
    {{- end }}
   {{- end }}
{{- if (eq (len $.Values.global.provider.kubernetes.deployment.zones) 0) }}
{{- fail "Provide atleast 1 zone information for .Values.global.provider.kubernetes.deployment.zones " }}
{{- end }}
{{- if and (not $storageClassName) .Values.global.provider.storage }}
  zones:
{{ toYaml .Values.global.provider.kubernetes.deployment.zones | trim | indent 4 }}
{{- end }}